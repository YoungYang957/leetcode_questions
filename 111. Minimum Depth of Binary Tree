# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def minDepth(self, root: Optional[TreeNode]) -> int:
        # if root is null, return 0
        if not root:
            return 0 
        # init the depth of two subtrees
        leftdepth = self.minDepth(root.left)
        rightdepth = self.minDepth(root.right)
        # if no subtrees return 1
        if not root.left and not root.right:
            return 1

        if not root.left and root.right:
            return 1 + rightdepth

        if not root.right and root.left:
            return 1 + leftdepth
        # pick the smallest subtree depth
        return 1 + min (leftdepth, rightdepth)
